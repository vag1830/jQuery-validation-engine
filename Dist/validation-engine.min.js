!function(e){"use strict";var n=function(){var n,i,t=this,a=[],o=!0;return t.processFields=function(n){e.each(n,function(e,n){i={},"object"==typeof n?(i.selector=e,i.enabled=void 0!==n.enabled?n.enabled:!0,delete n.enabled,t.processValidations(n),t.bindValidations(i),a.push(i)):console.error("ValidationEngine: "+e+" must be of type object. Not "+typeof n+".")})},t.processValidations=function(n){i.validations={},e.each(n,function(n,t){i.validations[n]={},"object"==typeof t?e.each(t,function(e,t){i.validations[n][e]=t}):i.validations[n].validator=t})},t.bindValidations=function(i){i.$elem=e('*[data-member="'+i.selector+'"]',n.$elem),1!==i.$elem.length&&console.error('ValidationEngine: None or multiple results for selector: "'+i.selector+'".')},t.getValue=function(n){var i=t.getTagName(n);return"select"===i||"textarea"===i?n.$elem.val():"input"===i?"text"===n.$elem.attr("type")||"password"===n.$elem.attr("type")?n.$elem.val():"radio"===n.$elem.attr("type")?e("input[name="+n.$elem.attr("name")+"]:checked").val():"checkbox"===n.$elem.attr("type")?n.$elem.is(":checked"):null:null},t.getTagName=function(e){return e.$elem.prop("tagName").toLowerCase()},t.searchField=function(n){var i;return e.each(a,function(e,t){return t.selector===n?(i=t,!1):void 0}),i},t.validateField=function(i){var a=!0;return e.each(i.validations,function(o,l){if("match"===o){var r=t.searchField(l.matchField);if(r){if("function"==typeof l.beforeValidation&&l.beforeValidation(i.$elem),!e.fn.validationEngine.validations[o](t.getValue(i),t.getValue(r)))return void(a=l.validator)}else console.error('ValidationEngine: MatchField was not found for match key : "'+l.matchField+'".')}else"function"==typeof l.beforeValidation&&l.beforeValidation(i.$elem),e.fn.validationEngine.validations[o](t.getValue(i))||(a=l.validator);return a!==!0?(e.each(i.validations,function(i,t){e("."+t.validator,n.$elem).removeClass("error")}),e("."+a,n.$elem).addClass("error"),"function"==typeof l.afterValidation&&l.afterValidation(i.$elem,a),!1):void 0}),a===!0&&e.each(i.validations,function(t,o){e("."+o.validator,n.$elem).removeClass("error"),"function"==typeof o.afterValidation&&o.afterValidation(i.$elem,a)}),a},t.validateAll=function(){var n=!0;return e.each(a,function(e,i){return i.enabled===!1?!0:void(t.validateField(i)!==!0&&(n=!1))}),n},{init:function(i,a){n=this,n.$elem=e(a),n.options=i,t.processFields(n.options)},destroy:function(){n.$elem.removeData(),n=void 0,t=void 0},addField:function(e){t.processFields(e)},addFields:function(e){t.processFields(e)},removeField:function(n){e.each(a,function(e,i){return i.selector===n?(a.splice(e,1),!1):void 0})},removeFields:function(i){e.each(i,function(e,i){n.removeField(i)})},enable:function(n){e.each(n,function(e,n){var i=t.searchField(n);i?i.enabled=!0:console.error('ValidationEngine: None fields found for key: "'+n+'".')})},disable:function(n){e.each(n,function(e,n){var i=t.searchField(n);i?i.enabled=!1:console.error('ValidationEngine: None fields found for key: "'+n+'".')})},validate:function(e){if(!e)return o&&(o=!1),t.validateAll();if(!o){var n=t.searchField(e);n.enabled&&t.validateField(n)}}}};e.fn.validationEngine=function(i){return this.each(function(){var t;return e(this).data("va-init")===!0?!1:(e(this).data("va-init",!0),t=new n,t.init(i,this),void e.data(this,"validationEngine",t))})},e.fn.validationEngine.validations={required:function(n){return e.trim(n).length>0?!0:!1},checkboxRequired:function(e){return e},isEmail:function(e){var n=/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i;return n.test(e)},isNumeric:function(){return!0},isAlphaNumeric:function(){return!0},match:function(e,n){return e===n},length:function(){},maxLength:function(){},minLength:function(){}}}($);